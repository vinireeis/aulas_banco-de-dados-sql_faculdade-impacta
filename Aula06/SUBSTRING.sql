-- SUBSTRING PARTE DO TEXTO
SELECT SUBSTRING ('ABCDEF', 3, 2)

SELECT NOME, SUBSTRING(NOME, 1,5) AS PRIMEIRO_NOME FROM TB_EMPREGADO

SELECT NOME FROM TB_EMPREGADO
WHERE SUBSTRING(NOME,1,1) = 'O'

SELECT NOME FROM TB_EMPREGADO 
WHERE NOME LIKE 'O%'

-- LEFT PARTE DO COMEÇO DO TEXTO 
SELECT LEFT('ABCDE', 3)

SELECT CIDADE, LEFT(CIDADE, 5) FROM TB_CLIENTE

SELECT * FROM TB_CLIENTE
WHERE LEFT(CIDADE, 1) = 'S'

-- RIGHT PARTE DO FINAL DO TEXTO
SELECT RIGHT('ABCDE', 3)

SELECT DESCRICAO, RIGHT(DESCRICAO, 1) FROM TB_PRODUTO

SELECT * FROM TB_PRODUTO
WHERE RIGHT(DESCRICAO, 2) = 'CM'

SELECT * FROM TB_PRODUTO
WHERE DESCRICAO LIKE '%CM'

-- LOWER 
SELECT LOWER('ABCDE')

SELECT NOME, LOWER(NOME) FROM TB_VENDEDOR

UPDATE TB_VENDEDOR
SET NOME = LOWER(NOME)

-- UPPER - MAÍUSCULO
SELECT UPPER('AbcdE')

SELECT NOME, UPPER(NOME) FROM TB_VENDEDOR

SELECT * FROM TB_VENDEDOR
WHERE LOWER(NOME) = 'LEIA'

-- LTRIM RETIRA ESPAÇOS EM BRANCO DA ESQUERDA
SELECT LTRIM('    ABCDE')

-- RTRIM RETIRA ESPAÇOS EM BRANCO DA DIREITA
SELECT RTRIM('ABCDE     ')

-- TRIM RETIRA ESPAÇOS EM BRANCO DA DIREITA E DA ESQUERDA
SELECT TRIM('   ABC DE    ')

-- LEN RETORNA A QTD DE CARACTERES, EXCETO OS EM ESPACOS A DIREITA 
SELECT LEN('ABCDE')

SELECT LEN('ABCDE    ') QTD_RTRIM

SELECT * FROM TB_CLIENTE
WHERE LEN(NOME) > 20

-- CHARINDEX RETORNA A POSIÇÃO DE UM CARACTERE
SELECT CHARINDEX('C', 'ABCDE')

SELECT NOME, CHARINDEX(' ',NOME) FROM TB_EMPREGADO

SELECT NOME, CHARINDEX(' ',NOME, 7) FROM TB_EMPREGADO

SELECT NOME, CHARINDEX(
						' ',
						NOME,
						CHARINDEX(' ', NOME)+1
) FROM TB_EMPREGADO

-- PRIMEIRO NOME DOS EMPREGADOS
SELECT NOME ,
SUBSTRING(NOME,1,CHARINDEX(' ',NOME)-1) AS PRIMEIRO_NOME,
LEFT(NOME,CHARINDEX(' ',NOME)-1) AS PRIMEIRO_NOME
FROM TB_EMPREGADO

-- REPLACE SUBSTITUI UM TEXTO POR OUTRO
SELECT REPLACE('ABCDE', 'BCD', '') 

SELECT REPLACE('ABCDE', 'C', '12345')

SELECT NOME, ENDERECO, 
	REPLACE(
		REPLACE(
			REPLACE(
				REPLACE(ENDERECO, 'R.', 'RUA '),
				'TRAV.', 'TRAVESSA '),
			'.', ''),
		'AV ', 'AVENIDA ') FROM TB_CLIENTE

-- CASE - COMPARA VALOR E RETORNAR UM VALOR PRÉDETERMINADO
SELECT NOME, SINDICALIZADO,
	CASE SINDICALIZADO
		WHEN 'S' THEN 'SIM'
		WHEN 'N' THEN 'NÃO'
		ELSE 'VER'
	END
FROM TB_EMPREGADO

-- CASE COM CONDIÇÃO 
SELECT NOME, SALARIO, 
	CASE
		WHEN SALARIO < 1000 THEN 'GANHA POUCO'
		WHEN SALARIO >= 1000 AND SALARIO <= 5000 THEN 'GANHA POUCO DE ACORDO COM O SAMU'
		WHEN SALARIO > 5000 THEN 'GANHA MUITO DE ACORDO COM O PROF'
		ELSE 'SEM SALÁRIO'
	END
FROM TB_EMPREGADO


-- PRIMEIRO NOME DOS EMPREGADOS
SELECT NOME ,
	CASE CHARINDEX(' ',NOME)
		WHEN 0 THEN NOME
		ELSE SUBSTRING(NOME,1,CHARINDEX(' ',NOME)-1) 
	END AS PRIMEIRO_NOME
FROM TB_EMPREGADO	 

-- YEAR RETORNA O ANO EM NÚMERO INTEIRO
SELECT YEAR(GETDATE())

SELECT NOME, DATA_NASCIMENTO, YEAR(DATA_NASCIMENTO) FROM TB_EMPREGADO

SELECT NOME FROM TB_EMPREGADO WHERE YEAR(DATA_NASCIMENTO) > 2000

SELECT NOME FROM TB_EMPREGADO WHERE DATA_NASCIMENTO >= '2000-01-01'

SELECT NOME FROM TB_EMPREGADO WHERE YEAR(DATA_NASCIMENTO) IN (1996, 2006)

SELECT NOME FROM TB_EMPREGADO
WHERE DATA_NASCIMENTO BETWEEN '1996-01-01' AND '1996-12-31 23:59:59'
OR DATA_NASCIMENTO BETWEEN '2006-01-01' AND '2006-12-31 23:59:59'

-- MONTH RETORNA O MÊS EM NÚMERO INTEIRO
SELECT MONTH(GETDATE())

SELECT NOME FROM TB_EMPREGADO WHERE MONTH(DATA_NASCIMENTO) = 4

-- DAY RETORNA O DIA EM NÚMERO INTEIRO (DE 1 ATÉ 31) 
SELECT DAY(GETDATE())

SELECT NOME, DATA_NASCIMENTO FROM TB_EMPREGADO
WHERE DAY(DATA_NASCIMENTO ) = 1 AND MONTH(DATA_NASCIMENTO) = 1

-- GETDATE() retorna data e hora do SERVIDORRRRRR!!!!!!!
SELECT GETDATE()

SELECT NOME, SALARIO, GETDATE() AS DT_EXTRACAO FROM TB_EMPREGADO

-- DATEDIFF INTERVALO ENTRE DUAS DATAS
SELECT NOME, DATA_ADMISSAO, DATEDIFF(day, data_admissao, getdate()) as dias_empresa
FROM TB_EMPREGADO

SELECT NOME, DATA_NASCIMENTO, 
	DATEDIFF(YEAR, DATA_NASCIMENTO, getdate()) as [diferença em anos],
	DATEDIFF(day, DATA_NASCIMENTO, getdate()) /365 as [idade]
FROM TB_EMPREGADO

-- DATEADD ADCIONA UM VALOR EM UMA DATA BASEADO EM UMA UNIDADE DE TEMPO
SELECT GETDATE(), DATEADD(hour, -3, getdate())

SELECT NUM_PEDIDO, DATA_EMISSAO, DATEADD(DAY, 5, DATA_EMISSAO) DATA_ENTREGA_PREVISTA
FROM TB_PEDIDO

-- DATEPART RETORNA EM NÚMERO INTEIRO UM "PEDAÇO" DA DATA/TEMPO 
SELECT DATEPART(WEEKDAY, GETDATE()) -- WEEEKDAY - DIA DA SEMANA

SELECT NOME FROM TB_EMPREGADO WHERE DATEPART(WEEKDAY, DATA_ADMISSAO) = 2

SELECT NOME FROM TB_EMPREGADO WHERE DATEPART(QUARTER, DATA_ADMISSAO) = 1

SELECT DISTINCT DATEPART(WEEKDAY, DATA_ADMISSAO) DIA_SEMANA_CONTRATA FROM TB_EMPREGADO

-- ABS RETORNA O VALOR ABSOLUTO DE UM DADO
SELECT ABS(-548)

SELECT ABS(548)

-- CEILING "ARREDONDA PARA CIMA" RETORNADO UM INTEIRO
SELECT CEILING(13.8), CEILING (13.0000000000000001) 

-- FLOOR "ARREDONDA PARA BAIXO" RETORNANDO UM INTEIRO
SELECT FLOOR(13.8), FLOOR(13.0000000000001)


-- FLOOR E CEILING
SELECT NUM_PEDIDO, 
		VLR_TOTAL, 
		CEILING(VLR_TOTAL) VLR_CIMA, 
		FLOOR(VLR_TOTAL) VLR_BAIXO 
FROM TB_PEDIDO

-- POWER POTENCIAÇÃO
SELECT POWER (2,3) DOIS_CUBO

SELECT POWER(5,5) CINCO_A_QUINTA

-- SQRT RAIZ QUADRADA
SELECT SQRT(9)

SELECT SQRT(10)

-- RAND FLOAT "ALEATÓRIO" ENTRE ZERO E 1
SELECT RAND()

-- VALOR ALEATÓRIO ENTRE 50 E 100
SELECT 50+(RAND()*50)

-- VALOR ALEATÓRIO ENTRE 1000 E 10000
SELECT 1000+(RAND()*9000)

-- ROUND ARREDONDAMENTO
SELECT ROUND(1.345, 0)

SELECT ROUND(85.784, 1) -- 85.800

-- CAST CONVERTE OS DATA TYPES
SELECT CAST( 50+(RAND()*50) AS INT)

SELECT CAST( 5.85 AS INT)

SELECT CAST( ROUND(5.85,0)  AS INT)

SELECT CAST( 1 AS CHAR(1) )

SELECT CAST( '1' AS DECIMAL(3,2) )

SELECT CAST( 'ABC' AS DECIMAL(3,2) )

SELECT CAST( GETDATE() AS VARCHAR(20))

-- CONVERT CONVERTE COM ESTILO
SELECT CONVERT(INT, 5.85)

SELECT CONVERT(VARCHAR(20), GETDATE(), 103)